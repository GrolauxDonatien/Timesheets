CREATE TABLE boards (
  board_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  reference VARCHAR(50) NOT NULL DEFAULT ""
);

CREATE TABLE messages (
  msg_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  board_id INTEGER,
  creation DATETIME NOT NULL DEFAULT 0,
  message VARCHAR(255),
  user VARCHAR(50) NOT NULL DEFAULT "",
  file VARCHAR(255),
  FOREIGN KEY (board_id) REFERENCES boards (board_id)
);

CREATE TABLE readcounts (
  readcount_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  user VARCHAR(50) NOT NULL DEFAULT "",
  board_id INTEGER NOT NULL DEFAULT 0,
  count INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY (board_id) REFERENCES boards (board_id)
);

CREATE TABLE users (
  user_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  login VARCHAR(50) NOT NULL DEFAULT "",
  password VARCHAR(200) NOT NULL DEFAULT "",
  admin BOOLEAN NOT NULL DEFAULT 0,
  validated BOOLEAN NOT NULL DEFAULT 0,
  superadmin BOOLEAN NOT NULL DEFAULT 0
);

CREATE TABLE universes (
  universe_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(255) NOT NULL DEFAULT "",
  registrable BOOLEAN NOT NULL DEFAULT 0,
  active BOOLEAN NOT NULL DEFAULT 0,
  user_id INTEGER,
  lockable BOOLEAN NOT NULL DEFAULT 0,
  FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE groups (
  group_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(80) NOT NULL DEFAULT "",
  universe_id INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY (universe_id) REFERENCES universes (universe_id)
);

CREATE TABLE slices (
  slice_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  start_date DATE NOT NULL DEFAULT 0,
  end_date DATE NOT NULL DEFAULT 0,
  name VARCHAR(80) NOT NULL DEFAULT "",
  universe_id INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY (universe_id) REFERENCES universes (universe_id)
);

CREATE TABLE tasks (
  task_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  description VARCHAR(255) NOT NULL DEFAULT "",
  group_id INTEGER,
  start_date DATE,
  end_date INTEGER,
  FOREIGN KEY (group_id) REFERENCES groups (group_id)
);

CREATE TABLE timeentries (
  timeentry_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER NOT NULL DEFAULT 0,
  slice_id INTEGER NOT NULL DEFAULT 0,
  description VARCHAR(255) NOT NULL DEFAULT "",
  progress INTEGER NOT NULL DEFAULT 0,
  length INTEGER NOT NULL DEFAULT 0,
  creation DATE NOT NULL DEFAULT 0,
  FOREIGN KEY (user_id) REFERENCES users (user_id),
  FOREIGN KEY (slice_id) REFERENCES slices (slice_id)
);

CREATE TABLE universesusers (
  universeuser_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  universe_id INTEGER NOT NULL DEFAULT 0,
  user_id INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY (universe_id) REFERENCES universes (universe_id),
  FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE usersgroups (
  usergroup_id INTEGER NOT NULL DEFAULT 0 UNIQUE PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER NOT NULL DEFAULT 0,
  group_id INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY (user_id) REFERENCES users (user_id),
  FOREIGN KEY (group_id) REFERENCES groups (group_id)
);

ALTER TABLE timeentries ADD COLUMN due_date date;
